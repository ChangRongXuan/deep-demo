{"version":3,"sources":["reportWebVitals.js","embedded.js","components/embedded-box.js","components/font-box.js","components/font.js","page/playground.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","Block","styled","div","_templateObject","_taggedTemplateLiteral","EmbeddedCode","embed","embeddedCode","setEmbed","concat","embedded","useRef","nodes","useMemo","ele","parse","scripts","querySelectorAll","forEach","s","remove","nonScripts","nonScriptsHtml","reduce","prev","next","toString","useEffect","current","node","fragment","document","createDocumentFragment","scriptEle","createElement","attrs","attributes","key","setAttribute","text","appendChild","_jsxs","_Fragment","children","_jsx","hidden","disabled","ref","dangerouslySetInnerHTML","__html","Box","Background","_templateObject2","EmbeddedBox","setShowEmBox","addEmbedded","placeholder","value","onChange","e","target","onClick","FontBox","setShowFontBox","setFont","font","boxName","setBoxName","addBox","Font","setShowFont","setPureFont","pureFont","setPureFontName","pureFontName","addFont","Buttons","AddButton","PlayPage","studio","initialize","sheet","getProject","_useState","useState","_useState2","_slicedToArray","showEmBox","_useState3","_useState4","showFontBox","_useState5","_useState6","showFont","_useState7","_useState8","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","_useState15","_useState16","object","position","x","y","style","cssText","body","onValuesChange","newValue","left","top","ReactDOM","render","name","arguments","length","undefined","content","box","bgColor","types","string","textContent","backgroundColor","size","color","fontSize","className","React","StrictMode","App","getElementById"],"mappings":"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","file":"static/js/main.aea58c2d.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import { parse } from 'node-html-parser';\nimport React, { useEffect, useMemo, useRef } from 'react';\nimport styled from 'styled-components';\n\nconst Block = styled.div`\n  position: relative;\n  img.img-responsive {\n    margin: 0 auto;\n    max-width: 100%;\n    height: auto;\n    display: block;\n  }\n`;\n\nexport default function EmbeddedCode({ embed, setEmbed }) {\n  const embeddedCode = `${embed}`;\n\n  const embedded = useRef(null);\n\n  // `embeddedCode` is a string, which may includes\n  // multiple script tags and other html tags.\n  // Here we separate script tags and other html tags\n  // by using the isomorphic html parser 'node-html-parser'\n  // into scripts nodes and non-script nodes.\n  //\n  // For non-script nodes we simply put them into dangerouslySetInnerHtml.\n  //\n  // For scripts nodes we only append them on the client side. So we handle scripts\n  // nodes when useEffect is called.\n  // The reasons we don't insert script tags through dangerouslySetInnerHtml:\n  // 1. Since react use setInnerHtml to append the htmlStirng received from\n  //    dangerouslySetInnerHtml, scripts won't be triggered.\n  // 2. Although the setInnerhtml way won't trigger script tags, those script tags\n  //    will still show on the HTML provided from SSR. When the browser parse the\n  //    html it will run those script and produce unexpected behavior.\n  const nodes = useMemo(() => {\n    const ele = parse(`<div id=\"draft-embed\">${embeddedCode}</div>`);\n\n    const scripts = ele.querySelectorAll('script');\n    scripts.forEach((s) => {\n      s.remove();\n    });\n    const nonScripts = ele.querySelectorAll('div#draft-embed > :not(script)');\n    const nonScriptsHtml = nonScripts.reduce(\n      (prev, next) => prev + next.toString(),\n      ''\n    );\n\n    return { scripts, nonScripts, nonScriptsHtml };\n  }, [embeddedCode]);\n  const { scripts, nonScriptsHtml } = nodes;\n\n  useEffect(() => {\n    if (embedded.current) {\n      const node = embedded.current;\n\n      const fragment = document.createDocumentFragment();\n\n      scripts.forEach((s) => {\n        const scriptEle = document.createElement('script');\n        const attrs = s.attributes;\n        for (const key in attrs) {\n          scriptEle.setAttribute(key, attrs[key]);\n        }\n        scriptEle.text = s.text || '';\n        fragment.appendChild(scriptEle);\n      });\n\n      node.appendChild(fragment);\n    }\n  }, [scripts]);\n\n  return (\n    <>\n      {\n        // WORKAROUND:\n        // The following `<input>` is to solve [issue 153](https://github.com/mirror-media/openwarehouse-k6/issues/153).\n        // If the emebed code generates `<input>` or `<textarea>` and appends them onto DOM,\n        // and then the generated `<input>` or `<textarea>` will hijack the users' cursors.\n        // It will cause that users could not edit the DraftJS Editor anymore.\n        // The following phony `<input>` is used to prevent the generated `<input>` or `<textare>` from\n        // hijacking the users' cursors.\n      }\n      <input hidden disabled />\n      <Block\n        ref={embedded}\n        dangerouslySetInnerHTML={{\n          __html: nonScriptsHtml,\n        }}\n      />\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nconst Box = styled.div`\n  width: 30%;\n  height: 50%;\n  background: white;\n  border: 10px;\n  padding: 20px;\n  outline: 3px solid black;\n  margin: 70px auto;\n\n  textarea {\n    width: 90%;\n    height: 200px;\n  }\n\n  button {\n    padding: 5px;\n    background: black;\n    color: white;\n    outline: none;\n    cursor: pointer;\n    margin-top: 10px;\n  }\n`;\n\nconst Background = styled.div`\n  width: 100%;\n  height: 100vh;\n  background: black;\n  opacity: 0.85;\n  display: flex;\n  justify-content: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 10000;\n`;\n\nexport default function EmbeddedBox({\n  setShowEmBox,\n  setEmbed,\n  embed,\n  addEmbedded,\n}) {\n  return (\n    <Background>\n      <Box>\n        <div>\n          <h2>請貼上 EmbeddedCode </h2>\n          <textarea\n            placeholder='貼上 embedded-code 字串'\n            value={embed}\n            onChange={(e) => setEmbed(e.target.value)}\n          />\n          <button\n            onClick={() => {\n              setShowEmBox(false);\n              addEmbedded(embed, setEmbed);\n            }}\n          >\n            確定\n          </button>\n        </div>\n      </Box>\n    </Background>\n  );\n}\n","import styled from 'styled-components';\n\nconst Box = styled.div`\n  width: 30%;\n  height: 50%;\n  background: white;\n  border: 10px;\n  padding: 20px;\n  outline: 3px solid black;\n  margin: 70px auto;\n\n  input {\n    width: 20%;\n    margin-bottom: 20px;\n  }\n\n  textarea {\n    width: 90%;\n    height: 200px;\n  }\n\n  button {\n    padding: 5px;\n    background: black;\n    color: white;\n    outline: none;\n    cursor: pointer;\n    margin-top: 10px;\n  }\n`;\n\nconst Background = styled.div`\n  width: 100%;\n  height: 100vh;\n  background: black;\n  opacity: 0.85;\n  display: flex;\n  justify-content: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 10000;\n`;\n\nexport default function FontBox({\n  setShowFontBox,\n  setFont,\n  font,\n  boxName,\n  setBoxName,\n  addBox,\n}) {\n  return (\n    <Background>\n      <Box>\n        <div>\n          <h2>請填入物件代號＋文字內容 </h2>\n\n          <span>物件代號(勿與之前的重複）：</span>\n          <input\n            placeholder='文字框名稱，中英文數字皆可'\n            value={boxName}\n            onChange={(e) => setBoxName(e.target.value)}\n          />\n\n          <textarea\n            placeholder='文字內容'\n            value={font}\n            onChange={(e) => setFont(e.target.value)}\n          />\n\n          <button\n            onClick={() => {\n              setShowFontBox(false);\n              addBox(boxName, font);\n            }}\n          >\n            確定\n          </button>\n        </div>\n      </Box>\n    </Background>\n  );\n}\n","import styled from 'styled-components';\n\nconst Box = styled.div`\n  width: 30%;\n  height: 50%;\n  background: white;\n  border: 10px;\n  padding: 20px;\n  outline: 3px solid black;\n  margin: 70px auto;\n\n  input {\n    width: 20%;\n    margin-bottom: 20px;\n  }\n\n  textarea {\n    width: 90%;\n    height: 200px;\n  }\n\n  button {\n    padding: 5px;\n    background: black;\n    color: white;\n    outline: none;\n    cursor: pointer;\n    margin-top: 10px;\n  }\n`;\n\nconst Background = styled.div`\n  width: 100%;\n  height: 100vh;\n  background: black;\n  opacity: 0.85;\n  display: flex;\n  justify-content: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 10000;\n`;\n\nexport default function Font({\n  setShowFont,\n  setPureFont,\n  pureFont,\n  setPureFontName,\n  pureFontName,\n  addFont,\n}) {\n  return (\n    <Background>\n      <Box>\n        <div>\n          <h2>請填入物件代號＋文字內容 </h2>\n\n          <span>物件代號(勿與之前的重複）：</span>\n          <input\n            placeholder='文字名稱，中英文數字皆可'\n            value={pureFontName}\n            onChange={(e) => setPureFontName(e.target.value)}\n          />\n\n          <textarea\n            placeholder='文字內容'\n            value={pureFont}\n            onChange={(e) => setPureFont(e.target.value)}\n          />\n\n          <button\n            onClick={() => {\n              setShowFont(false);\n              addFont(pureFontName, pureFont);\n            }}\n          >\n            確定\n          </button>\n        </div>\n      </Box>\n    </Background>\n  );\n}\n","import studio from '@theatre/studio';\nimport { getProject, types } from '@theatre/core';\nimport { useState } from 'react';\nimport EmbeddedCode from '../embedded';\nimport styled from 'styled-components';\nimport EmbeddedBox from '../components/embedded-box';\nimport FontBox from '../components/font-box';\nimport ReactDOM from 'react-dom';\nimport Font from '../components/font';\n\nconst Buttons = styled.div`\n  position: fixed;\n  padding: 30px;\n  bottom: 0;\n  left: 0;\n  background: pink;\n  z-index: 10000;\n`;\n\nconst AddButton = styled.div`\n  padding: 5px;\n  outline: 3px solid black;\n  background: white;\n  color: black;\n  cursor: pointer;\n  font-size: 14px;\n  margin: 20px auto;\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nexport default function PlayPage() {\n  studio.initialize();\n\n  const project = getProject('deepfake demo');\n  const sheet = project.sheet('Scene', 'default');\n\n  const addBox = (name = '', content = '') => {\n    const box = sheet.object(`${name}`, {\n      position: {\n        x: 0,\n        y: 0,\n      },\n      bgColor: types.string('#ffffff'),\n    });\n\n    const div = document.createElement('div');\n\n    div.style.cssText = `\n      position: absolute;\n      width: 300px;\n      height: 20px;\n      background: white;\n      outline: 3px solid black;\n      z-index: 10000;\n      padding: 20px;\n    `;\n\n    div.textContent = `${content}`;\n\n    document.body.appendChild(div);\n\n    box.onValuesChange((newValue) => {\n      div.style.left = newValue.position.x + 'px';\n      div.style.top = newValue.position.y + 'px';\n      div.style.backgroundColor = newValue.bgColor;\n    });\n  };\n\n  const addFont = (name = '', content = '') => {\n    const box = sheet.object(`${name}`, {\n      position: {\n        x: 0,\n        y: 0,\n      },\n      size: types.string('50px'),\n      color: types.string('#000000'),\n    });\n\n    const div = document.createElement('div');\n\n    div.style.cssText = `\n      font-size: 50px;\n      position: absolute;\n      color: black;\n      z-index: 10000000;\n    `;\n\n    div.textContent = `${content}`;\n\n    document.body.appendChild(div);\n\n    box.onValuesChange((newValue) => {\n      div.style.left = newValue.position.x + 'px';\n      div.style.top = newValue.position.y + 'px';\n      div.style.fontSize = newValue.size;\n      div.style.color = newValue.color;\n    });\n  };\n\n  const addEmbedded = (embed, setEmbed) => {\n    const embedded = sheet.object('embedded', {\n      position: {\n        x: 0,\n        y: 0,\n      },\n    });\n\n    const div = document.createElement('div');\n\n    div.style.cssText = `\n      position: absolute;\n      width: 100%;\n      height: 100vh;\n      background: white;\n    `;\n\n    document.body.appendChild(div);\n\n    embedded.onValuesChange((newValue) => {\n      div.style.left = newValue.position.x + 'px';\n      div.style.top = newValue.position.y + 'px';\n    });\n\n    ReactDOM.render(<EmbeddedCode embed={embed} setEmbed={setEmbed} />, div);\n  };\n\n  const [showEmBox, setShowEmBox] = useState(false);\n  const [showFontBox, setShowFontBox] = useState(false);\n  const [showFont, setShowFont] = useState(false);\n  const [embed, setEmbed] = useState('');\n  const [font, setFont] = useState('');\n  const [pureFont, setPureFont] = useState('');\n  const [boxName, setBoxName] = useState('box');\n  const [pureFontName, setPureFontName] = useState('font');\n\n  return (\n    <>\n      {showEmBox && (\n        <EmbeddedBox\n          setShowEmBox={setShowEmBox}\n          setEmbed={setEmbed}\n          embed={embed}\n          addEmbedded={addEmbedded}\n        />\n      )}\n\n      {showFontBox && (\n        <FontBox\n          setShowFontBox={setShowFontBox}\n          setFont={setFont}\n          font={font}\n          setBoxName={setBoxName}\n          boxName={boxName}\n          addBox={addBox}\n        />\n      )}\n\n      {showFont && (\n        <Font\n          setShowFont={setShowFont}\n          setPureFont={setPureFont}\n          pureFont={pureFont}\n          setPureFontName={setPureFontName}\n          pureFontName={pureFontName}\n          addFont={addFont}\n        />\n      )}\n\n      <Buttons>\n        <AddButton\n          className='add-embedded-box'\n          onClick={() => {\n            setShowEmBox(true);\n          }}\n        >\n          新增embedded\n        </AddButton>\n        <AddButton\n          className='add-font-box'\n          onClick={() => {\n            setShowFontBox(true);\n          }}\n        >\n          新增文字框\n        </AddButton>\n        <AddButton\n          className='add-font'\n          onClick={() => {\n            setShowFont(true);\n          }}\n        >\n          新增文字標題\n        </AddButton>\n      </Buttons>\n    </>\n  );\n}\n","import ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport React from 'react';\n\nimport App from './page/playground';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}